{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","handleDocumentPressedKey","event","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,2BAFb,EAaEC,yBAA2B,SAACC,GACtBA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,QAAQ,2BAAD,OAA6BE,EAAMC,QAfhE,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,4BAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,4BAV/C,oBAmBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,MAAf,SACE,4BAAIT,UAxBZ,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.ae3714c3.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  message: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    message: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentPressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentPressedKey);\n  }\n\n  handleDocumentPressedKey = (event: KeyboardEvent) => {\n    if (event.key) {\n      this.setState({ message: `The last pressed key is ${event.key}` });\n    }\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p>{message}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}